# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\POE_notifier_test.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 350)
        MainWindow.setMinimumSize(QtCore.QSize(400, 350))
        MainWindow.setMaximumSize(QtCore.QSize(400, 350))
        MainWindow.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/icon_without_bg.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolTip("")
        MainWindow.setStyleSheet("background-color: #351c13;")
        MainWindow.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_start = QtWidgets.QPushButton(self.centralwidget)
        self.btn_start.setGeometry(QtCore.QRect(280, 130, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.btn_start.setFont(font)
        self.btn_start.setStyleSheet("background-color: #bb7c2d;")
        self.btn_start.setObjectName("btn_start")
        self.btn_stop = QtWidgets.QPushButton(self.centralwidget)
        self.btn_stop.setGeometry(QtCore.QRect(20, 130, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.btn_stop.setFont(font)
        self.btn_stop.setStyleSheet("background-color: #bb7c2d;")
        self.btn_stop.setObjectName("btn_stop")
        self.btn_browse_path = QtWidgets.QToolButton(self.centralwidget)
        self.btn_browse_path.setGeometry(QtCore.QRect(350, 10, 31, 21))
        self.btn_browse_path.setWhatsThis("")
        self.btn_browse_path.setStyleSheet("background-color: #bb7c2d;")
        self.btn_browse_path.setObjectName("btn_browse_path")
        self.btn_test_message = QtWidgets.QPushButton(self.centralwidget)
        self.btn_test_message.setGeometry(QtCore.QRect(110, 80, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_test_message.setFont(font)
        self.btn_test_message.setStyleSheet("background-color: #bb7c2d;")
        self.btn_test_message.setDefault(False)
        self.btn_test_message.setFlat(False)
        self.btn_test_message.setObjectName("btn_test_message")
        self.btn_connect = QtWidgets.QPushButton(self.centralwidget)
        self.btn_connect.setGeometry(QtCore.QRect(110, 50, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_connect.setFont(font)
        self.btn_connect.setStyleSheet("background-color: #bb7c2d;")
        self.btn_connect.setObjectName("btn_connect")
        self.input_path = QtWidgets.QLineEdit(self.centralwidget)
        self.input_path.setGeometry(QtCore.QRect(20, 10, 321, 21))
        self.input_path.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.input_path.setStyleSheet("background-color: #bb7c2d;")
        self.input_path.setText("")
        self.input_path.setFrame(False)
        self.input_path.setObjectName("input_path")
        self.output_log = QtWidgets.QTextEdit(self.centralwidget)
        self.output_log.setGeometry(QtCore.QRect(10, 180, 381, 151))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.output_log.setFont(font)
        self.output_log.setStyleSheet("background-color: #bb7c2d;")
        self.output_log.setFrameShape(QtWidgets.QFrame.Panel)
        self.output_log.setTabChangesFocus(False)
        self.output_log.setReadOnly(True)
        self.output_log.setObjectName("output_log")
        self.rBtnContainer = QtWidgets.QGroupBox(self.centralwidget)
        self.rBtnContainer.setGeometry(QtCore.QRect(160, 120, 81, 51))
        self.rBtnContainer.setStyleSheet("background-color: #bb7c2d;border: 0;")
        self.rBtnContainer.setTitle("")
        self.rBtnContainer.setObjectName("rBtnContainer")
        self.rBtn_pm = QtWidgets.QRadioButton(self.rBtnContainer)
        self.rBtn_pm.setGeometry(QtCore.QRect(10, 1, 82, 20))
        self.rBtn_pm.setStyleSheet("background-color: #bb7c2d;")
        self.rBtn_pm.setChecked(True)
        self.rBtn_pm.setObjectName("rBtn_pm")
        self.rBtn_trade = QtWidgets.QRadioButton(self.rBtnContainer)
        self.rBtn_trade.setGeometry(QtCore.QRect(10, 30, 82, 16))
        self.rBtn_trade.setStyleSheet("background-color: #bb7c2d;")
        self.rBtn_trade.setChecked(False)
        self.rBtn_trade.setObjectName("rBtn_trade")
        self.rBtnContainer.raise_()
        self.btn_start.raise_()
        self.btn_stop.raise_()
        self.btn_browse_path.raise_()
        self.btn_test_message.raise_()
        self.btn_connect.raise_()
        self.input_path.raise_()
        self.output_log.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.btn_test_message, self.btn_stop)
        MainWindow.setTabOrder(self.btn_stop, self.btn_start)
        MainWindow.setTabOrder(self.btn_start, self.btn_browse_path)
        MainWindow.setTabOrder(self.btn_browse_path, self.input_path)
        MainWindow.setTabOrder(self.input_path, self.output_log)
        MainWindow.setTabOrder(self.output_log, self.btn_connect)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PathOfExile Notifier by Ricrawl"))
        self.btn_start.setToolTip(_translate("MainWindow", "Start notifier"))
        self.btn_start.setWhatsThis(_translate("MainWindow", "Start script"))
        self.btn_start.setText(_translate("MainWindow", "START"))
        self.btn_stop.setToolTip(_translate("MainWindow", "Stop notifier"))
        self.btn_stop.setWhatsThis(_translate("MainWindow", "Stop script"))
        self.btn_stop.setText(_translate("MainWindow", "STOP"))
        self.btn_browse_path.setToolTip(_translate("MainWindow", "File Browser"))
        self.btn_browse_path.setText(_translate("MainWindow", "..."))
        self.btn_test_message.setToolTip(_translate("MainWindow", "Sending test message to your bot"))
        self.btn_test_message.setWhatsThis(_translate("MainWindow", "Test message to your bot for checking"))
        self.btn_test_message.setText(_translate("MainWindow", "Test message to bot"))
        self.btn_connect.setToolTip(_translate("MainWindow", "Click to connect notifier to bot"))
        self.btn_connect.setWhatsThis(_translate("MainWindow", "Connect script with your bot"))
        self.btn_connect.setText(_translate("MainWindow", "Configure telegram module"))
        self.input_path.setToolTip(_translate("MainWindow", "<html><head/><body><p>Path to &quot;Client.txt&quot; file (*Steam\\steamapps\\common\\Path Of Exile\\logs\\Client.txt)</p></body></html>"))
        self.input_path.setWhatsThis(_translate("MainWindow", "Path to \"Client.txt\" file"))
        self.output_log.setToolTip(_translate("MainWindow", "Log information"))
        self.output_log.setWhatsThis(_translate("MainWindow", "LOG"))
        self.output_log.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p></body></html>"))
        self.output_log.setPlaceholderText(_translate("MainWindow", "-----------------------------------LOG----------------------------------"))
        self.rBtn_pm.setToolTip(_translate("MainWindow", "Choose to monitor private messages (recommended)"))
        self.rBtn_pm.setText(_translate("MainWindow", "PM"))
        self.rBtn_trade.setToolTip(_translate("MainWindow", "Choose to monitor Trade messages"))
        self.rBtn_trade.setText(_translate("MainWindow", "Trade"))
